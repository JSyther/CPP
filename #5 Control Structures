In C++, control structures are used to control the flow of execution of a program. They allow you to specify a different path of execution based on certain conditions.
There are three main control structures in C++:

If-Else Statements: The if-else statement allows you to execute a block of code if a condition is true, and a different block of code if it's false.

Example:
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
int a = 10, b = 20;
if (a > b) {
   cout << "a is greater than b";
} else {
   cout << "b is greater than or equal to a";
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Loops: Loops are used to repeat a block of code a specified number of times. There are two types of loops in C++: for loops and while loops.

Example of a for loop:
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
for (int i = 0; i < 10; i++) {
   cout << i << " ";
}
Example of a while loop:

int i = 0;
while (i < 10) {
   cout << i << " ";
   i++;
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Switch Statements: The switch statement allows you to choose among several alternatives based on the value of an expression.

Example:
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
int day = 4;
switch (day) {
   case 1:
      cout << "Monday";
      break;
   case 2:
      cout << "Tuesday";
      break;
   case 3:
      cout << "Wednesday";
      break;
   case 4:
      cout << "Thursday";
      break;
   case 5:
      cout << "Friday";
      break;
   case 6:
      cout << "Saturday";
      break;
   case 7:
      cout << "Sunday";
      break;
   default:
      cout << "Invalid day";
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Some additional control structures in C++

* Jump Statements: Jump statements allow you to transfer control to another part of the program. There are three types of jump statements: break, continue, and goto.
  The break statement is used to exit a loop or a switch statement, while the continue statement is used to skip the current iteration of a loop.
  The goto statement allows you to transfer control to a specified label within the same function.

* Range-Based for Loop: This is a new feature in C++11 that allows you to iterate over elements in an array, a container, or any other object that provides begin()
  and end() methods.

Example:
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
vector<int> numbers = {1, 2, 3, 4, 5};
for (int x : numbers) {
   cout << x << " ";
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------

Initializer List: An initializer list is a new feature in C++11 that allows you to create an object with an initial value, without the need for a constructor.

Example:
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
vector<int> numbers = {1, 2, 3, 4, 5};
----------------------------------------------------------------------------------------------------------------------------------------------------------------------


Nested Control Structures: You can nest control structures inside each other, allowing you to write complex conditions and loops.
For example, you can have an if statement inside a for loop, or a for loop inside an if-else statement.

Return Statement: The return statement is used to exit a function and return a value back to the calling function.
You can use a return statement inside a control structure to return a value based on certain conditions.

Conditional Operator: The conditional operator is a shorthand for an if-else statement.
It has the following syntax: condition ? expression1 : expression2. If the condition is true, expression1 is executed, otherwise expression2 is executed.

Example:
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
int a = 10, b = 20;
int result = (a > b) ? a : b;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
This is a brief overview of some additional aspects of control structures in C++ that.
